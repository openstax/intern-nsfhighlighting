{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "h/static/scripts/base/environment-flags.js",
    "h/static/scripts/header.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;;AAEA;;;;;;;;;;;;;;;;;;;;IAeM,gB;AACJ;;;;AAIA,4BAAY,OAAZ,EAAqB;AAAA;;AACnB,SAAK,QAAL,GAAgB,OAAhB;AACD;;AAED;;;;;;;;;wBAKI,I,EAAM;AACR,UAAM,YAAY,SAAS,IAA3B;AACA,aAAO,KAAK,QAAL,CAAc,SAAd,CAAwB,QAAxB,CAAiC,SAAjC,CAAP;AACD;;AAED;;;;;;;;;;;;wBASI,I,EAAM,E,EAAI;AACZ,UAAM,YAAY,SAAS,IAA3B;AACA,UAAI,EAAJ,EAAQ;AACN,aAAK,QAAL,CAAc,SAAd,CAAwB,GAAxB,CAA4B,SAA5B;AACD,OAFD,MAEO;AACL,aAAK,QAAL,CAAc,SAAd,CAAwB,MAAxB,CAA+B,SAA/B;AACD;AACF;;AAED;;;;;;;;;;;;yBASK,G,EAAK;AAAA;;AACR,UAAM,kBAAkB,IAAxB;;AAEA;AACA,WAAK,GAAL,CAAS,YAAT,EAAuB,IAAvB;;AAEA;AACA;AACA;AACA,WAAK,GAAL,CAAS,OAAT,EAAkB,KAAK,QAAL,CAAc,YAAhC;;AAEA;AACA;AACA,WAAK,cAAL,GAAsB,WAAW,YAAM;AACrC,cAAK,GAAL,CAAS,YAAT,EAAuB,IAAvB;AACD,OAFqB,EAEnB,eAFmB,CAAtB;;AAIA;AACA,UAAM,QAAQ,gBAAgB,OAAO,KAAK,QAAL,CAAc,aAAd,CAA4B,QAA5B,CAAqC,IAA5D,CAAd;AACA,YAAM,OAAN,CAAc,UAAC,IAAD,EAAU;AACtB,YAAI,KAAK,OAAL,CAAa,KAAb,MAAwB,CAA5B,EAA+B;AAC7B,gBAAK,GAAL,CAAS,KAAK,KAAL,CAAW,CAAX,CAAT,EAAwB,KAAxB;AACD,SAFD,MAEO;AACL,gBAAK,GAAL,CAAS,IAAT,EAAe,IAAf;AACD;AACF,OAND;AAOD;;AAED;;;;;;4BAGQ;AACN,UAAI,KAAK,cAAT,EAAyB;AACvB,qBAAa,KAAK,cAAlB;AACD;AACF;;;;;;AAGH;;;;;;;;AAMA,SAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC5B,MAAM,QAAQ,oBAAoB,IAApB,CAAyB,GAAzB,CAAd;AACA,MAAI,QAAQ,EAAZ;AACA,MAAI,KAAJ,EAAW;AACT,YAAQ,MAAM,CAAN,EAAS,KAAT,CAAe,GAAf,CAAR;AACD;;AAED;AACA,MAAI,IAAI,KAAJ,CAAU,YAAV,CAAJ,EAA6B;AAC3B,UAAM,IAAN,CAAW,eAAX;AACD;AACD,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,gBAAjB;;;ACzHA;;AAEA;AACA;AACA;AACA;;AAEA,IAAM,mBAAmB,QAAQ,0BAAR,CAAzB;;AAEA,OAAO,QAAP,GAAkB,IAAI,gBAAJ,CAAqB,SAAS,eAA9B,CAAlB;AACA,OAAO,QAAP,CAAgB,IAAhB;;AAEA;AACA,IAAM,eAAe,SAAS,aAAT,CAAuB,2CAAvB,CAArB;AACA,IAAI,YAAJ,EAAkB;AAChB;AACA,SAAO,EAAP,GAAY,OAAO,EAAP,IAAW,YAAU;AAAC,KAAC,GAAG,CAAH,GAAK,GAAG,CAAH,IAAM,EAAZ,EAAgB,IAAhB,CAAqB,SAArB;AAAgC,GAAlE,CAAmE,GAAG,CAAH,GAAK,CAAC,IAAI,IAAJ,EAAN;AACnE,KAAG,QAAH,EAAa,aAAa,OAA1B,EAAmC,MAAnC;AACA,KAAG,MAAH,EAAW,UAAX;AACA;AACD",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\n/**\n * EnvironmentFlags provides a facility to modify the appearance or behavior\n * of components on the page depending on the capabilities of the user agent.\n *\n * It adds `env-${flag}` classes to a top-level element in the document to\n * indicate support for scripting, touch input etc. These classes can then be\n * used to modify other elements in the page via descendent selectors.\n *\n * EnvironmentFlags provides hooks to override the detected set of environment\n * features via query-string or fragment parameters in the URL:\n *\n *  \"__env__\" -  A semi-colon list of environment flags to enable or disable\n *               (if prefixed with \"no-\"). eg. \"__env__=touch\"\n *  \"nojs=1\"  -  Shorthand for \"__env__=no-js-capable\"\n */\nclass EnvironmentFlags {\n  /**\n    * @param {Element} element - DOM element which environment flags will be added\n    *                  to.\n    */\n  constructor(element) {\n    this._element = element;\n  }\n\n  /**\n   * Return the current value of an environment flag.\n   *\n   * @param {string} flag\n   */\n  get(flag) {\n    const flagClass = 'env-' + flag;\n    return this._element.classList.contains(flagClass);\n  }\n\n  /**\n   * Set or clear an environment flag.\n   *\n   * This will add or remove the `env-${flag}` class from the element which\n   * contains environment flags.\n   *\n   * @param {string} flag\n   * @param {boolean} on\n   */\n  set(flag, on) {\n    const flagClass = 'env-' + flag;\n    if (on) {\n      this._element.classList.add(flagClass);\n    } else {\n      this._element.classList.remove(flagClass);\n    }\n  }\n\n  /**\n   * Detect user agent capabilities and set default flags.\n   *\n   * This sets the `js-capable` flag but clears it if `ready()` is not called\n   * within 5000ms. This can be used to hide elements of the page assuming that\n   * they can later be shown via JS but show them again if scripts fail to load.\n   *\n   * @param {string} [url] - Optional value to use as the URL for flag overrides\n   */\n  init(url) {\n    const JS_LOAD_TIMEOUT = 5000;\n\n    // Mark browser as JS capable\n    this.set('js-capable', true);\n\n    // Set a flag to indicate touch support. Useful for browsers that do not\n    // support interaction media queries.\n    // See http://caniuse.com/#feat=css-media-interaction\n    this.set('touch', this._element.ontouchstart);\n\n    // Set an additional flag if scripts fail to load in a reasonable period of\n    // time\n    this._jsLoadTimeout = setTimeout(() => {\n      this.set('js-timeout', true);\n    }, JS_LOAD_TIMEOUT);\n\n    // Process flag overrides specified in URL\n    const flags = envFlagsFromUrl(url || this._element.ownerDocument.location.href);\n    flags.forEach((flag) => {\n      if (flag.indexOf('no-') === 0) {\n        this.set(flag.slice(3), false);\n      } else {\n        this.set(flag, true);\n      }\n    });\n  }\n\n  /**\n   * Mark the page load as successful.\n   */\n  ready() {\n    if (this._jsLoadTimeout) {\n      clearTimeout(this._jsLoadTimeout);\n    }\n  }\n}\n\n/**\n * Extract environment flags from `url`.\n *\n * @param {string} url\n * @return {Array<string>} flags\n */\nfunction envFlagsFromUrl(url) {\n  const match = /\\b__env__=([^&]+)/.exec(url);\n  let flags = [];\n  if (match) {\n    flags = match[1].split(';');\n  }\n\n  // Convenience shorthand to disable JS\n  if (url.match(/\\bnojs=1\\b/)) {\n    flags.push('no-js-capable');\n  }\n  return flags;\n}\n\nmodule.exports = EnvironmentFlags;\n",
    "'use strict';\n\n// Header script which is included inline at the top of every page on the site.\n//\n// This should be a small script which does things like setting up flags to\n// indicate that scripting is active, send analytics events etc.\n\nconst EnvironmentFlags = require('./base/environment-flags');\n\nwindow.envFlags = new EnvironmentFlags(document.documentElement);\nwindow.envFlags.init();\n\n// Set up the Google Analytics command queue if we have a tracking ID.\nconst gaTrackingId = document.querySelector('meta[name=\"google-analytics-tracking-id\"]');\nif (gaTrackingId) {\n  /* eslint-disable */\n  window.ga = window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;\n  ga('create', gaTrackingId.content, 'auto');\n  ga('send', 'pageview');\n  /* eslint-enable */\n}\n"
  ]
}